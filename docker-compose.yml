# Copyright 2025 Viraj Malia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Media Server Docker Services

name: media-server

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    extends:
      file: hwaccel.transcoding.yml
      service: quicksync # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/data
      - /etc/localtime:/etc/localtime:ro
      - ${EXTERNAL_LIB}:/usr/src/app/external
    env_file:
      - .env
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-openvino
    extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
      file: hwaccel.ml.yml
      service: openvino # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:5b8f8c333bef895c925f56629d6ba90aea95a4f7391f62411e625267c600b19c
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=1000               # Your user ID on Ubuntu
      - PGID=1000               # Your group ID on Ubuntu
      - TZ=Etc/UTC              # Set your timezone, e.g., America/Vancouver
      - CLI_ARGS=               # Optional CLI arguments
      - SETTINGS_ENCRYPTION_KEY=${SETTINGS_ENCRYPTION_KEY}
      - DUPLICATI__WEBSERVICE_PASSWORD=${DUPLICATI__WEBSERVICE_PASSWORD} # Password for web interface
    volumes:
      - ./data/duplicati/config:/config    # Local directory for Duplicati config
      - ./data/duplicati/backups:/backups  # Directory to store backup files
      - ./data/duplicati/source:/source    # Directory you want to back up
      - ${EXTERNAL_LIB}:/immich/external # Access Immich external library for backups
      - ${UPLOAD_LOCATION}:/immich/uploads # Access Immich uploads for backups
    ports:
      - 8200:8200                  # Web interface port mapping
    restart: unless-stopped

  plex:
    image: plexinc/pms-docker:${PLEX_VERSION:-latest}
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Vancouver
      - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
    volumes:
      - /etc/localtime:/etc/localtime:ro # Sync the container's time to the host's time
      - ./data/plexmediaserver:/config # Plex server application data is stored in a folder called 'plexmediaserver' in the same directory as the docker-compose.yaml file
      - ./data/ssl:/data/plex-ssl # Map SSL certificate and key files to the container
    restart: unless-stopped

  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./data/immich.conf:/etc/nginx/conf.d/immich.conf # nginx config for reverse-proxy
      - ./data/ssl:/etc/nginx/ssl
    depends_on:
      - immich-server

volumes:
  model-cache:
